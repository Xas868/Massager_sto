#image: maven:3.8.5-jdk-11
#
#stages:
#  - build&test
#  - package
#  - dockerise
#
#variables:
#  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
#
#services:
#  - postgres
#
#variables:
#  POSTGRES_DB: postgres
#  POSTGRES_USER: postgres
#  POSTGRES_PASSWORD: root
#  POSTGRES_HOST_AUTH_METHOD: trust
#
#cache:
#  key:
#    files:
#      - pom.xml
#  paths:
#    - .m2/repository
#
#Test project:
#  stage: build&test
#  script:
#    - mvn $MAVEN_OPTS -DDB_HOST=postgres -DDB_PORT=5432 -DDB_NAME=$POSTGRES_DB -DDB_USERNAME=$POSTGRES_USER -DDB_PASSWORD=$POSTGRES_PASSWORD test
#  artifacts:
#    paths:
#      - target/surefire-reports/TEST-*.xml
#    reports:
#      junit: target/surefire-reports/TEST-*.xml

#Package project:
#  stage: package
#  script:
#    - mvn -Dmaven.test.skip=true $MAVEN_OPTS package
#  artifacts:
#    paths:
#      - target/*.jar
#
#Dockerise project:
#  stage: dockerise
#  image: docker:latest
#  when: manual
#  services:
#    - docker:dind
#  script:
#    - docker build -t $CI_REGISTRY_IMAGE:my_image .
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN git.kata.academy:5050
#    - docker push $CI_REGISTRY_IMAGE:my_image